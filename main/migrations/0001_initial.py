# Generated by Django 5.1.1 on 2024-10-06 02:35

import datetime
import django.contrib.postgres.fields
import django.core.validators
import django.db.models.deletion
import main.models.user
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('branch_name', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('branch_address', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Closed', 'Closed')], default='Active', max_length=6)),
            ],
            options={
                'verbose_name_plural': 'Branches',
            },
        ),
        migrations.CreateModel(
            name='CourseCategory',
            fields=[
                ('category_code', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('category_name', models.CharField(max_length=255)),
                ('category_type', models.CharField(choices=[('PDC', 'Practical Driving Course'), ('TDC', 'Theoretical Driving Course')], max_length=25)),
            ],
            options={
                'verbose_name_plural': 'Course Categories',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('role', models.CharField(choices=[('Admin', 'Admin'), ('Staff', 'Staff'), ('Instructor', 'Instructor'), ('Student', 'Student')], default='Student', max_length=20)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('can_edit', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', main.models.user.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Classroom',
            fields=[
                ('classroom_code', models.CharField(editable=False, max_length=10, primary_key=True, serialize=False)),
                ('capacity', models.PositiveIntegerField()),
                ('status', models.CharField(choices=[('Available', 'Available'), ('Unavailable', 'Unavailable')], default='Available', max_length=12)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.branch')),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('course_code', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('course_name', models.CharField(max_length=255)),
                ('course_description', models.CharField(max_length=500)),
                ('status', models.CharField(choices=[('Open', 'Open'), ('Archived', 'Archived')], default='Open', max_length=8)),
                ('course_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.coursecategory')),
            ],
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('enrollment_id', models.AutoField(primary_key=True, serialize=False)),
                ('enrollment_date', models.DateField(default=datetime.date(2024, 10, 6))),
                ('transmission_type', models.CharField(choices=[('MT', 'MT'), ('AT', 'AT'), ('NA', 'NA')], default='NA', max_length=2)),
                ('total_hours', models.PositiveIntegerField()),
                ('preferred_dates', django.contrib.postgres.fields.ArrayField(base_field=models.DateField(), blank=True, default=list, help_text='List of preferred dates for sessions.', size=None)),
                ('remarks', models.TextField(blank=True, help_text='Additional comments or information related to the enrollment.', null=True)),
                ('status', models.CharField(choices=[('Awaiting Action', 'Awaiting Action'), ('Awaiting Follow-Up', 'Awaiting Follow-Up'), ('All Sessions Scheduled', 'All Sessions Scheduled'), ('In Progress', 'In Progress'), ('Completed', 'Completed'), ('Forfeited', 'Forfeited')], default='Awaiting Action', max_length=30)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.branch')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.course')),
            ],
        ),
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('facility_type', models.CharField(choices=[('Vehicle', 'Vehicle'), ('Classroom', 'Classroom')], max_length=10)),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
        ),
        migrations.CreateModel(
            name='Instructor',
            fields=[
                ('instructor_code', models.CharField(editable=False, max_length=10, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('year_started', models.PositiveIntegerField(default=2024, validators=[django.core.validators.MinValueValidator(2019), django.core.validators.MaxValueValidator(2024)])),
                ('status', models.CharField(choices=[('Active', 'Active'), ('On Leave', 'On Leave'), ('Inactive', 'Inactive')], default='Active', max_length=10)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.branch')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('session_id', models.AutoField(primary_key=True, serialize=False)),
                ('session_nth', models.CharField(max_length=5, validators=[django.core.validators.RegexValidator(message="Session nth must be a number or 'EXT'/'ASS'.", regex='^\\d+$|^(EXT|ASS)$')])),
                ('session_date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('status', models.CharField(choices=[('Scheduled', 'Scheduled'), ('Completed', 'Completed'), ('Missed', 'Missed'), ('Cancelled', 'Cancelled')], default='Scheduled', max_length=15)),
                ('enrollment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.enrollment')),
                ('facility', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.facility')),
                ('instructor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.instructor')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('student_code', models.CharField(editable=False, max_length=10, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('year_joined', models.PositiveIntegerField(default=2024)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive')], default='Active', max_length=8)),
                ('user', models.OneToOneField(blank=True, help_text='Optional: Link to a user account.', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='enrollment',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.student'),
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('vehicle_code', models.CharField(editable=False, max_length=10, primary_key=True, serialize=False)),
                ('wheel_num', models.CharField(choices=[('2W', '2 Wheels'), ('3W', '3 Wheels'), ('4W', '4 Wheels')], max_length=2)),
                ('vehicle_model', models.CharField(max_length=255)),
                ('color', models.CharField(max_length=50)),
                ('manufacturer', models.CharField(max_length=255)),
                ('year_acquired', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1886), django.core.validators.MaxValueValidator(2024)])),
                ('status', models.CharField(choices=[('Available', 'Available'), ('Unavailable', 'Unavailable')], default='Available', max_length=12)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.branch')),
            ],
        ),
    ]
